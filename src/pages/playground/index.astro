---
import Layout from '../../layouts/Layout.astro';
---

<Layout title="Interactive Playground Hub">
  <div class="min-h-screen bg-gray-50 dark:bg-gray-900">
    <!-- Hero Section -->
    <section class="py-12 md:py-20">
      <div class="container px-4 sm:px-6 lg:px-8 mx-auto">
        <div class="max-w-4xl mx-auto text-center mb-16">
          <h1 class="text-5xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 bg-clip-text text-transparent">
            Interactive Playground
          </h1>
          <p class="text-xl text-gray-600 dark:text-gray-300 mb-8">
            Explore technology through hands-on experimentation. From GLSL shaders to sorting algorithms,
            dive into interactive learning experiences that bring code to life.
          </p>
          <div class="flex flex-wrap justify-center gap-6 text-sm text-gray-500 dark:text-gray-400">
            <div class="flex items-center">
              <div class="w-3 h-3 bg-green-500 rounded-full mr-3"></div>
              Real-time execution
            </div>
            <div class="flex items-center">
              <div class="w-3 h-3 bg-blue-500 rounded-full mr-3"></div>
              Interactive visualizations
            </div>
            <div class="flex items-center">
              <div class="w-3 h-3 bg-purple-500 rounded-full mr-3"></div>
              Educational examples
            </div>
            <div class="flex items-center">
              <div class="w-3 h-3 bg-pink-500 rounded-full mr-3"></div>
              Shareable creations
            </div>
          </div>
        </div>

        <!-- Playground Cards -->
        <div class="max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-8">
          <!-- GLSL Shader Playground -->
          <div class="group bg-white dark:bg-gray-800 rounded-2xl shadow-xl overflow-hidden transform transition-all duration-300 hover:scale-105 hover:shadow-2xl">
            <div class="relative h-64 bg-gradient-to-br from-blue-600 via-purple-600 to-pink-600 overflow-hidden">
              <div class="absolute inset-0 bg-black/20"></div>
              <div class="absolute inset-0 flex items-center justify-center">
                <div class="text-center text-white">
                  <svg class="w-16 h-16 mx-auto mb-4 opacity-90" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                  </svg>
                  <div class="text-sm opacity-75">Real-time Graphics</div>
                </div>
              </div>
              <!-- Animated background effect -->
              <div class="absolute inset-0 bg-gradient-to-r from-transparent via-white/10 to-transparent transform -skew-x-12 translate-x-full group-hover:translate-x-[-200%] transition-transform duration-1000"></div>
            </div>

            <div class="p-8">
              <h3 class="text-2xl font-bold mb-3">GLSL Shader Playground</h3>
              <p class="text-gray-600 dark:text-gray-300 mb-6">
                Create stunning real-time graphics with WebGL fragment shaders. Experiment with mathematical art,
                ray marching, fractals, and visual effects.
              </p>

              <div class="flex flex-wrap gap-2 mb-6">
                <span class="px-3 py-1 text-xs font-medium bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-300 rounded-full">WebGL</span>
                <span class="px-3 py-1 text-xs font-medium bg-purple-100 dark:bg-purple-900/30 text-purple-800 dark:text-purple-300 rounded-full">Real-time</span>
                <span class="px-3 py-1 text-xs font-medium bg-pink-100 dark:bg-pink-900/30 text-pink-800 dark:text-pink-300 rounded-full">Interactive</span>
              </div>

              <div class="grid grid-cols-2 gap-4 mb-6 text-sm text-gray-500 dark:text-gray-400">
                <div>• Color waves & patterns</div>
                <div>• Ray marching 3D scenes</div>
                <div>• Fractal generators</div>
                <div>• Mouse interaction</div>
              </div>

              <a
                href="/playground/glsl"
                class="inline-flex items-center w-full justify-center px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white font-medium rounded-lg transition-all duration-200 transform hover:scale-105"
              >
                <span>Open GLSL Playground</span>
                <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
                </svg>
              </a>
            </div>
          </div>

          <!-- Algorithm Visualizer -->
          <div class="group bg-white dark:bg-gray-800 rounded-2xl shadow-xl overflow-hidden transform transition-all duration-300 hover:scale-105 hover:shadow-2xl">
            <div class="relative h-64 bg-gradient-to-br from-purple-600 via-blue-600 to-cyan-600 overflow-hidden">
              <div class="absolute inset-0 bg-black/20"></div>
              <div class="absolute inset-0 flex items-center justify-center">
                <div class="text-center text-white">
                  <svg class="w-16 h-16 mx-auto mb-4 opacity-90" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                  </svg>
                  <div class="text-sm opacity-75">Step-by-step Learning</div>
                </div>
              </div>
              <!-- Animated background effect -->
              <div class="absolute inset-0 bg-gradient-to-r from-transparent via-white/10 to-transparent transform -skew-x-12 translate-x-full group-hover:translate-x-[-200%] transition-transform duration-1000"></div>
            </div>

            <div class="p-8">
              <h3 class="text-2xl font-bold mb-3">Algorithm Visualizer</h3>
              <p class="text-gray-600 dark:text-gray-300 mb-6">
                Watch sorting algorithms come to life with interactive visualizations. Compare different approaches,
                understand time complexity, and see algorithms in action.
              </p>

              <div class="flex flex-wrap gap-2 mb-6">
                <span class="px-3 py-1 text-xs font-medium bg-purple-100 dark:bg-purple-900/30 text-purple-800 dark:text-purple-300 rounded-full">8+ Algorithms</span>
                <span class="px-3 py-1 text-xs font-medium bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-300 rounded-full">Animated</span>
                <span class="px-3 py-1 text-xs font-medium bg-cyan-100 dark:bg-cyan-900/30 text-cyan-800 dark:text-cyan-300 rounded-full">Educational</span>
              </div>

              <div class="grid grid-cols-2 gap-4 mb-6 text-sm text-gray-500 dark:text-gray-400">
                <div>• Bubble & Quick sort</div>
                <div>• Merge & Heap sort</div>
                <div>• Performance comparison</div>
                <div>• Step-by-step breakdown</div>
              </div>

              <a
                href="/playground/algorithms"
                class="inline-flex items-center w-full justify-center px-6 py-3 bg-gradient-to-r from-purple-600 to-cyan-600 hover:from-purple-700 hover:to-cyan-700 text-white font-medium rounded-lg transition-all duration-200 transform hover:scale-105"
              >
                <span>Open Algorithm Visualizer</span>
                <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
                </svg>
              </a>
            </div>
          </div>
        </div>


      </div>
    </section>
  </div>
</Layout>

<style>
  /* Custom scrollbar styling */
  ::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }

  ::-webkit-scrollbar-track {
    background: theme('colors.gray.100');
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb {
    background: theme('colors.gray.400');
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: theme('colors.gray.500');
  }

  .dark ::-webkit-scrollbar-track {
    background: theme('colors.gray.800');
  }

  .dark ::-webkit-scrollbar-thumb {
    background: theme('colors.gray.600');
  }

  .dark ::-webkit-scrollbar-thumb:hover {
    background: theme('colors.gray.500');
  }

  /* Smooth animations */
  * {
    scroll-behavior: smooth;
  }

  /* Gradient text animation */
  @keyframes gradient {
    0%, 100% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
  }

  .bg-gradient-to-r {
    background-size: 200% 200%;
    animation: gradient 8s ease infinite;
  }

  /* Card hover animations */
  .group:hover .absolute.inset-0 {
    animation: shimmer 0.8s ease-in-out;
  }

  @keyframes shimmer {
    0% { transform: translateX(-100%) skewX(-12deg); }
    100% { transform: translateX(200%) skewX(-12deg); }
  }

  /* Pulse effect for coming soon cards */
  .border-dashed {
    animation: pulse-border 3s infinite;
  }

  @keyframes pulse-border {
    0%, 100% { border-opacity: 1; }
    50% { border-opacity: 0.5; }
  }

  /* Enhanced focus states */
  a:focus-visible {
    outline: 2px solid theme('colors.blue.500');
    outline-offset: 2px;
  }

  /* Mobile optimizations */
  @media (max-width: 768px) {
    .container {
      padding-left: 1rem;
      padding-right: 1rem;
    }

    .grid {
      gap: 1rem;
    }

    .text-5xl {
      font-size: 2.5rem;
    }

    .text-6xl {
      font-size: 3rem;
    }
  }
</style>
