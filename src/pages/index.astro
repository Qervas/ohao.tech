---
import Layout from '../layouts/Layout.astro';
import Icon from '../components/Icon.astro';
import { getCollection } from 'astro:content';

// Get content collections
const allProjects = await getCollection('projects');
const allArticles = await getCollection('articles', ({ data }) => {
  return data.status === 'published';
});

// Get only active projects
const activeProjects = allProjects
  .filter(project => project.data.status === 'active')
  .sort((a, b) => b.data.publishedAt.valueOf() - a.data.publishedAt.valueOf())
  .slice(0, 3);

// Get recent articles for news banner
const recentArticles = allArticles
  .sort((a, b) => b.data.publishedAt.valueOf() - a.data.publishedAt.valueOf())
  .slice(0, 6);

const quickLinks = [
  { name: "GitHub", url: "https://github.com/Qervas", icon: "Github" },
  { name: "LinkedIn", url: "https://www.linkedin.com/in/shaoxuan-yin-021548170/", icon: "Linkedin" },
  { name: "YouTube", url: "https://www.youtube.com/channel/UCpQsuzZtivtAUV1Xvcpt02w", icon: "Youtube" },
  { name: "X (Twitter)", url: "https://x.com/FrankYin17", icon: "Twitter" },
  { name: "Email", url: "mailto:shayi783@student.liu.se", icon: "Mail" }
];

const featuredWork = [
  {
    title: "Interactive Playground",
    description: "Explore algorithms through interactive visualizations - sorting, trees, and dynamic programming",
    url: "/playground",
    icon: "Code2",
    highlights: ["Tree Search Algorithms", "Dynamic Programming", "Real-time Visualization"]
  },
  {
    title: "Projects Gallery",
    description: "Graphics engines, AI research, and software engineering projects",
    url: "/projects",
    icon: "Folder",
    highlights: ["Neural Rendering", "C++/Vulkan", "Physics Simulation"]
  },
  {
    title: "Technical Articles",
    description: "Deep dives into graphics, AI, and software engineering topics",
    url: "/articles",
    icon: "BookOpen",
    highlights: ["Research Insights", "Technical Tutorials", "Industry Thoughts"]
  }
];

function formatDate(date: Date) {
  return date.toLocaleDateString('en-US', {
    month: 'short',
    day: 'numeric',
    year: 'numeric'
  });
}

function getProjectStatus(status: string) {
  const statusMap = {
    active: { label: 'Active', color: 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-400' },
    completed: { label: 'Completed', color: 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-400' },
    paused: { label: 'Paused', color: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-400' },
    planning: { label: 'Planning', color: 'bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-400' }
  };
  return statusMap[status] || statusMap.active;
}
---

<Layout title="Shaoxuan Yin - Neural Rendering & Graphics">
  <!-- Header -->
  <section class="py-8 border-b border-border/50">
    <div class="container">
      <div class="flex flex-col md:flex-row md:items-center justify-between gap-4">
        <div>
          <h1 class="text-3xl font-bold">Shaoxuan Yin</h1>
          <p class="text-muted-foreground">Neural Rendering & Real-Time Graphics</p>
          <p class="text-sm text-muted-foreground">MSc Computer Science @ Link√∂ping University</p>
        </div>
        <div class="flex gap-3">
          {quickLinks.map(link => (
            <a
              href={link.url}
              target="_blank"
              class="flex items-center gap-2 px-3 py-2 rounded-lg border border-border hover:bg-accent transition-colors text-sm"
            >
              <Icon name={link.icon} className="w-4 h-4" />
              {link.name}
            </a>
          ))}
        </div>
      </div>
    </div>
  </section>

  <!-- News Banner - Sliding Articles -->
  <section class="py-4 bg-primary/5 border-b border-border/50 overflow-hidden">
    <div class="container">
      <div class="flex items-center gap-4 mb-2">
        <div class="flex items-center gap-2 text-sm font-medium">
          <Icon name="Bell" className="w-4 h-4 text-primary" />
          <span>Latest Articles</span>
        </div>
      </div>
      <div class="relative">
        <div class="flex animate-slide">
          {recentArticles.concat(recentArticles).map((article, index) => (
            <a
              href={`/articles/${article.slug}`}
              key={index}
              class="flex-shrink-0 mr-8 group"
            >
              <div class="flex items-center gap-3 text-sm">
                <span class="px-2 py-1 rounded text-xs bg-accent text-muted-foreground">
                  {article.data.type}
                </span>
                <span class="group-hover:text-primary transition-colors">
                  {article.data.title}
                </span>
                <span class="text-muted-foreground">
                  {formatDate(article.data.publishedAt)}
                </span>
              </div>
            </a>
          ))}
        </div>
      </div>
    </div>
  </section>

  <!-- Featured Work -->
  <section class="py-12 bg-accent/20">
    <div class="container">
      <h2 class="text-2xl font-bold mb-8 text-center">Featured Work</h2>
      <div class="grid md:grid-cols-3 gap-6">
        {featuredWork.map(work => (
          <a
            href={work.url}
            class="group p-6 rounded-xl border border-border bg-background hover:border-primary/50 transition-all duration-300 hover:shadow-lg"
          >
            <div class="flex items-center gap-3 mb-4">
              <div class="p-2 rounded-lg bg-primary/10 group-hover:bg-primary/20 transition-colors">
                <Icon name={work.icon} className="w-5 h-5 text-primary" />
              </div>
              <h3 class="font-semibold group-hover:text-primary transition-colors">{work.title}</h3>
            </div>
            <p class="text-muted-foreground mb-4 text-sm">{work.description}</p>
            <div class="space-y-1">
              {work.highlights.map(highlight => (
                <div class="flex items-center gap-2 text-xs text-muted-foreground">
                  <div class="w-1 h-1 rounded-full bg-primary"></div>
                  {highlight}
                </div>
              ))}
            </div>
          </a>
        ))}
      </div>
    </div>
  </section>

  <!-- Main Content Grid -->
  <div class="container py-8">
    <div class="grid lg:grid-cols-2 gap-8">

      <!-- Active Projects -->
      <section class="space-y-4">
        <h2 class="text-xl font-semibold flex items-center gap-2">
          <Icon name="Code2" className="w-5 h-5 text-primary" />
          Active Projects
        </h2>
        <div class="space-y-3">
          {activeProjects.length > 0 ? activeProjects.map(project => (
            <a
              href={`/projects/${project.slug}`}
              class="block p-4 rounded-lg border border-border hover:border-primary/50 transition-colors"
            >
              <div class="flex items-start justify-between">
                <div class="flex-1">
                  <h3 class="font-medium">{project.data.title}</h3>
                  <p class="text-sm text-muted-foreground mt-1">{project.data.description}</p>
                  <div class="flex gap-2 mt-2">
                    {project.data.technologies?.slice(0, 3).map(tech => (
                      <span class="text-xs px-2 py-1 rounded bg-accent text-muted-foreground">
                        {tech}
                      </span>
                    ))}
                  </div>
                </div>
                <div class="flex flex-col items-end gap-1">
                  <span class={`text-xs px-2 py-1 rounded-full ${getProjectStatus(project.data.status).color}`}>
                    {getProjectStatus(project.data.status).label}
                  </span>
                  <span class="text-xs text-muted-foreground">{formatDate(project.data.publishedAt)}</span>
                </div>
              </div>
            </a>
          )) : (
            <div class="p-4 rounded-lg border border-border text-center text-muted-foreground">
              <p>No active projects at the moment</p>
            </div>
          )}
        </div>
        <div class="text-center">
          <a
            href="/projects"
            class="inline-flex items-center gap-2 text-sm text-primary hover:underline"
          >
            View all projects <Icon name="ArrowRight" className="w-4 h-4" />
          </a>
        </div>
      </section>

      <!-- Recent Articles -->
      <section class="space-y-4">
        <h2 class="text-xl font-semibold flex items-center gap-2">
          <Icon name="BookOpen" className="w-5 h-5 text-primary" />
          Recent Articles
        </h2>
        <div class="space-y-3">
          {recentArticles.slice(0, 4).map(article => (
            <a
              href={`/articles/${article.slug}`}
              class="block p-4 rounded-lg border border-border hover:border-primary/50 transition-colors"
            >
              <div class="flex items-start justify-between">
                <div class="flex-1">
                  <h3 class="font-medium">{article.data.title}</h3>
                  <p class="text-sm text-muted-foreground mt-1">{article.data.description || article.data.excerpt}</p>
                  <div class="flex items-center gap-3 mt-2 text-xs text-muted-foreground">
                    <span class="px-2 py-1 rounded bg-accent">{article.data.type}</span>
                    {article.data.readingTime && <span>{article.data.readingTime}m read</span>}
                  </div>
                </div>
                <span class="text-xs text-muted-foreground">{formatDate(article.data.publishedAt)}</span>
              </div>
            </a>
          ))}
        </div>
        <div class="text-center">
          <a
            href="/articles"
            class="inline-flex items-center gap-2 text-sm text-primary hover:underline"
          >
            Read more articles <Icon name="ArrowRight" className="w-4 h-4" />
          </a>
        </div>
      </section>

    </div>

    <!-- Quick Stats -->
    <section class="mt-12 p-6 rounded-xl bg-accent/20 border border-border/50">
      <div class="grid grid-cols-2 md:grid-cols-4 gap-6 text-center">
        <div>
          <div class="text-2xl font-bold text-primary">2+</div>
          <div class="text-sm text-muted-foreground">Years Graphics</div>
        </div>
        <div>
          <div class="text-2xl font-bold text-primary">{allProjects.length}</div>
          <div class="text-sm text-muted-foreground">Projects</div>
        </div>
        <div>
          <div class="text-2xl font-bold text-primary">{allArticles.length}</div>
          <div class="text-sm text-muted-foreground">Articles</div>
        </div>
        <div>
          <div class="text-2xl font-bold text-primary">MSc</div>
          <div class="text-sm text-muted-foreground">Graphics & Viz</div>
        </div>
      </div>
    </section>

    <!-- Recent Updates -->
    <section class="mt-8 text-center">
      <p class="text-sm text-muted-foreground">
        Last updated: January 20, 2025 |
        <a href="/about" class="text-primary hover:underline">More about me</a> |
        <a href="/playground" class="text-primary hover:underline">Try the playground</a>
      </p>
    </section>
  </div>
</Layout>

<style>
  @keyframes slide {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }

  .animate-slide {
    animation: slide 30s linear infinite;
  }

  .animate-slide:hover {
    animation-play-state: paused;
  }
</style>
