---
import SimpleImage from './SimpleImage.astro';

export interface Props {
  src: string;
  alt: string;
  caption?: string;
  class?: string;
  loading?: 'lazy' | 'eager';
  clickable?: boolean;
  width?: number;
  height?: number;
}

const {
  src,
  alt,
  caption,
  class: className = '',
  loading = 'lazy',
  clickable = false,
  width,
  height
} = Astro.props;

// Ensure absolute path
const imageSrc = src.startsWith('/') ? src : `/${src}`;
---

<div class={`group relative ${className}`}>
  <div class="overflow-hidden rounded-lg">
    {clickable ? (
      <button
        class="w-full h-full focus:outline-none focus:ring-2 focus:ring-primary/50 focus:ring-offset-2"
        onclick="openImageModal(this)"
      >
        <SimpleImage
          src={imageSrc}
          alt={alt}
          loading={loading}
          width={width}
          height={height}
          class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
        />
      </button>
    ) : (
      <SimpleImage
        src={imageSrc}
        alt={alt}
        loading={loading}
        width={width}
        height={height}
        class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
      />
    )}
  </div>

  {caption && (
    <p class="text-sm text-muted-foreground text-center mt-2 px-2">
      {caption}
    </p>
  )}
</div>

{clickable && (
  <script is:inline>
    if (typeof window !== 'undefined') {
      window.openImageModal = function(button) {
        const img = button.querySelector('img');
        if (!img) return;

        // Create modal overlay
        const modal = document.createElement('div');
        modal.className = 'fixed inset-0 z-50 flex items-center justify-center bg-black/80 backdrop-blur-sm';
        modal.onclick = () => modal.remove();

        // Create modal content
        const modalContent = document.createElement('div');
        modalContent.className = 'relative max-w-7xl max-h-full p-4';
        modalContent.onclick = (e) => e.stopPropagation();

        // Create large image
        const modalImg = document.createElement('img');
        modalImg.src = img.src;
        modalImg.alt = img.alt;
        modalImg.className = 'max-w-full max-h-full object-contain rounded-lg';

        // Create close button
        const closeBtn = document.createElement('button');
        closeBtn.innerHTML = 'Ã—';
        closeBtn.className = 'absolute top-2 right-2 w-8 h-8 bg-black/50 text-white rounded-full hover:bg-black/70 transition-colors text-xl leading-none';
        closeBtn.onclick = () => modal.remove();

        modalContent.appendChild(modalImg);
        modalContent.appendChild(closeBtn);
        modal.appendChild(modalContent);
        document.body.appendChild(modal);

        // Prevent body scroll
        document.body.style.overflow = 'hidden';

        // Cleanup on close
        modal.addEventListener('remove', () => {
          document.body.style.overflow = '';
        });

        // Close on escape key
        const handleEscape = (e) => {
          if (e.key === 'Escape') {
            modal.remove();
            document.removeEventListener('keydown', handleEscape);
          }
        };
        document.addEventListener('keydown', handleEscape);
      };
    }
  </script>
)}
